Curso:
https://www.udemy.com/course/curso-flask/

Instructor:
https://www.udemy.com/user/alex-roel/

Última actualización: 4/2023
Idioma:               Español

extensiones en vscode instalacion con ctrl p, pegar siguiente linea y enter
ext install wholroyd.jinja

se guardaran ejemplos de los capitulos
  ejemplos/capN


Este curso incluye:

>>>> Seccion
<<<< Capitulo
.... Recursos
---- Enlaces


>>>> Seccion 1 "Introducción"
<<<< Cap 1 "Introducción"
<<<< Cap 2 "¿Cómo hacer el curso?"
<<<< Cap 3 "¿Cómo hacer preguntas?"
<<<< Cap 4 "Herramientas de desarrollo"
.... Recursos
  https://www.python.org/
  https://code.visualstudio.com/

>>>> Seccion 2 "Introducción a Flask"
<<<< Cap 5 "¿Qué es Flask?"
.... Recursos
  https://palletsprojects.com/p/flask/
<<<< Cap 6 "Instalación y configuración"
.... Recursos
  https://flask.palletsprojects.com/en/2.2.x/installation/

* se recomienda instalar dependecias para seguridad

-- instalar venv y pip (mac o linux)l
$$
sudo apt install 
python3-venv
python3-pip

-- crear entorno virtua (mac o linux)l
$$
python3 -m venv env

-- "Activar" entorno virtual (mac o linux)
$$
. env/bin/activate
source env/bin/activate

-- Listar dependecias de pip (sirve para comprobrar si se activo entorno virtual)
$$
pip list  

-- Instalar flask
$$
pip install flask

-- "Desactivar" entorno virtual (mac o linux)
$$
deactivate

<<<< Cap 7 "Hola Mundo con Flask"
.... Recursos
  https://flask.palletsprojects.com/en/2.2.x/quickstart/


/////////// linea de codigo archivo "hello.py"
from flask import Flask

app = Flask(__name__)

@app.route('/hello')
def hello():
  return 'Hola mundo'
/////////// linea de codigo

------- Terminal con venv activada
$$
flask --app hello run

--- En navegador "puerto que especifique la terminal"
localhost:5000/hello

<<<< Cap 8 "El depurado en Flask"

--- Activar aplicacion con modo depuracion
$$
flask --app hello --debug run

URL:
localhost:5000/hello

<<<< Cap 9 "Rutas y vistas"

Archivos:
ejemplos/cap9.py
# Si se repiten las rutas solo tomara la primera vista
# Se pueden usar diferentes nombre de rutas para acceder a una vista


URL:
localhost:5000/
localhost:5000/hello

localhost:5000/index

Consola:
flask --app cap9 --debug run

<<<< Cap 10 "Variables en rutas"

Archivos:
ejemplos/cap10.py

URL:
localhost:5000/hello/
localhost:5000/hello/jhon
localhost:5000/hello/jhon/25

Consola:
flask --app cap10 --debug run

---- Tipos de parametros aceptados en la vista "string, int, float, path, uuid"

<<<< Cap 11 "Escape de HTML"


Archivos:
ejemplos/cap11.py

--- en el archivo ejemplo se muestra como usar la biblioteca con su funcion
escape para evitar ataques de inyeccion maliciosa por url

from markupsafe import escape
escape(code)

URL:
localhost:5000/codebad/<script>alert("bad")</script>
localhost:5000/code/<script>alert("bad")</script>

Consola:
flask --app cap11 --debug run

<<<< Cap 12 "Resumen de la sección - Introducción a Flask"

>>>> Seccion 3 "Plantillas con Jinja2 y HTML"
<<<< Cap 13 "Introducción a plantillas"
<<<< Cap 14 "Creación de plantillas"

---- crear carpeta /templates
---- importar modulo de flask "render_template"
---- en la vista se pone la ruta de la plantilla

---- en la plantilla para definir valores de variables se usan dobles corchetes
{{name}}

---- para definir estructuras de control como condicionales se usa corchetes y porcentajes
{ % % }

Archivos:
ejemplos/cap14/cap14.py
ejemplos/cap14/templates/index.html


URL:
localhost:5000/
localhost:5000/index

Consola:
flask --app cap14 --debug run

<<<< Cap 15 "Uso de variables y bucles"

---- uso de ciclo for
---- uso de listas en platillas

Archivos:
ejemplos/cap15/cap15.py
ejemplos/cap15/templates/index.html

URL:
localhost:5000/

Consola:
flask --app cap15 --debug run

<<<< Cap 16 "Uso de herencia de plantillas"

---- crear archivo para herencia "normalmente se nombra base.html"
base.html

---- crear bloques de contenido para campos dinamicos en "base.html"
{% block title%} {% endblock %}
{% block content%} {% endblock %}

---- para recibir los bloques de contenido en la otra plantilla en "index.html"
{% extends 'base.html' %}
{% block title%} Pagina de inicio {% endblock %}


Archivos:
ejemplos/cap16/cap16.py
ejemplos/cap16/templates/index.html
ejemplos/cap16/templates/base.html


URL:
localhost:5000/index

Consola:
flask --app cap16 --debug run

<<<< Cap 17 "Uso de filtros y funciones"

flask --app hello --debug run

---- Filtros upper, reverse
  <p>Hola, {{name | upper}}</p>

  {% for friend in friends | reverse %}
    <li> {{friend}} </li>
  {% endfor %}

---- Funciones: repeat()
  <p>La fecha de hoy es : {{ date | today }}</p>
  <p>La frase repetida es : {{ repeat('hola', 3) }}</p>

---- Filtro de fecha, corregir fecha
  return date.strftime('%d-%m-%Y')

---- Uso de decoradores para agregar funciones de manera global
  app.add_template_filter(today, 'today') # Este se despues de declarar la funcion
  @app.add_template_global # Este se usa justo una linea antes de la funcion

Archivos:
ejemplos/cap17/cap17.py
ejemplos/cap17/templates/index.html
ejemplos/cap17/templates/base.html

URL:
localhost:5000/index

Consola:
flask --app cap17 --debug run



<<<< Cap 18 "Cómo enviar datos a las plantillas"

---- Cambios en jinja 
is,    por ==
None,  por none

---- Agregar en jinja
endif, o cualquer otro endNN correspondiente a un cliclo

---- Borrar  en jinja
:,     en condicionales que los contengan

Archivos:
ejemplos/cap18/cap18.py
ejemplos/cap18/templates/hello.html
ejemplos/cap18/templates/base.html


URL:
localhost:5000/hello
localhost:5000/hello/hola
localhost:5000/hello/jhon/25
localhost:5000/hello/jhon/25/john@117.com

Consola:
flask --app cap18 --debug run


<<<< Cap 19 "Enlaces y rutas"

---- Agregar funcion "url_for" para agregar rutas desde flask
from flask import url_for


<<<< Cap 20 "Integrando archivos estáticos"

---- Crear carpeta "static"
static/

---- Dentro se pueden crear subcarpetas para imagenes, estilos, javascript
static/css
static/js
static/img

---- En archivo "base.html" de jinja se hace lo siguente con "url_for" para invocar archivos estaticos
<link rel="stylesheet" href="{{ url_for('static', filename = 'css/main.css') }}">

---- en el archivo prinicipal se invoca "url_for" con sus otras dependencias si son necesarias
from flask import  url_for

Archivos:
ejemplos/cap20/cap20.py
ejemplos/cap20/templates/index.html
ejemplos/cap20/templates/base.html

ejemplos/cap20/static/css/main.css

URL:
http://localhost:5000/

Consola:
flask --app cap20 --debug run

<<<< Cap 21 "Resumen de la seccion - Plantillas con Jinja2 y HTML"

>>>> Seccion 4 "Manejo de formulario"
<<<< Cap 22 "Introducción a los formularios"
<<<< Cap 23 "Crear formularios"

---- en el archivo prinicipal se invoca "url_for" con sus otras dependencias si son necesarias
from flask import request

---- Register usuario # metodo "GET" necesario para renderizar plantilla # metodo "POST" necesario para resivir formulario

templates/auth/register.html

Archivos:
ejemplos/cap23/cap23.py
ejemplos/cap23/templates/auth/register.html
ejemplos/cap23/templates/base.html

URL:
http://localhost:5000/auth/register

Consola:
flask --app cap23 --debug run

<<<< Cap 24 "Validación de datos de formularios"
<<<< Cap 25 "Formulario con WTForms"
<<<< Cap 26 "Validación de datos con WTForm"
<<<< Cap 27 "Resumen de la sección - Manejo de formulario"

>>>> Seccion 5 "Estructura de una aplicación - TodoList"
<<<< Cap 28 "Presentación del proyecto"
<<<< Cap 29 "Estructura del proyecto"
<<<< Cap 30 "Configuración de la aplicación"
<<<< Cap 31 "Blueprint y Vistas"
<<<< Cap 32 "Plantilla de base e inicio"
<<<< Cap 33 "Plantilla de login y registrar usuario"
<<<< Cap 34 "Resumen de la sección - Estructura de una aplicación - TodoList"

>>>> Seccion 6 "Base de datos - Flask-SQLAchemy"
<<<< Cap 35 "Introducción Flask-SQLAchemy"
<<<< Cap 36 "Configuración Flask-SQLAlchemy"
.... Recursos
  https://flask-sqlalchemy.palletsprojects.com/en/3.0.x/quickstart/
<<<< Cap 37 "Modelo de Usuario"
<<<< Cap 38 "Modelo de Todo"
<<<< Cap 39 "Migración de Modelos"
<<<< Cap 40 "Flask Shell"
<<<< Cap 41 "Registrar Usuario"
<<<< Cap 42 "Mensaje de error"
<<<< Cap 43 "Resumen de la sección Base de Datos - Flask-SQLAlchemy"

>>>> Seccion 7 "Autenticación de usuarios"
<<<< Cap 44 "Introducción a autenticación"
<<<< Cap 45 "Iniciar sesión"
<<<< Cap 46 "Mantener sesión"
<<<< Cap 47 "Verificar sesión"
<<<< Cap 48 "Cerrar sesión"
<<<< Cap 49 "Requiere autenticación"
<<<< Cap 50 "Listar Tareas"
<<<< Cap 51 "Listar Tareas"
<<<< Cap 52 "Listar Tareas"
<<<< Cap 53 "Eliminar Tarea"
<<<< Cap 54 "Resumen de la sección - Autenticación de usuarios"

>>>> Seccion 8 "Crear proyecto  - BLOG-POSTS"
<<<< Cap 55 "Presentación del proyecto - BLOG-POSTS"
.... Recursos
  blog-posts-frontend.zip
<<<< Cap 56 "Crear proyecto"
<<<< Cap 57 "Creando las Vistas"
<<<< Cap 58 "Uniendo Frontend - Flask"
<<<< Cap 59 "Plantilla de login"
<<<< Cap 60 "Archivo de configuración"
<<<< Cap 61 "Conexión a PostgreSQL"
.... Recursos
  https://www.postgresql.org/
  https://www.youtube.com/watch?v=n5Ec9bMouWQ
<<<< Cap 62 "Creando Modelos"
<<<< Cap 63 "Autenticación"
<<<< Cap 64 "Mensaje de error"
<<<< Cap 65 "Menú de navegación"
<<<< Cap 66 "Administrar pefil"
<<<< Cap 67 "Subir Foto"
<<<< Cap 68 "Error de implementación"
<<<< Cap 69 "Listar blogs"
<<<< Cap 70 "Instalar CKEditor"
.... Recursos
  https://flask-ckeditor.readthedocs.io/en/latest/
<<<< Cap 71 "Crear blog"
<<<< Cap 72 "Editar y eliminar blog"
<<<< Cap 73 "Vista de publicaciones"
<<<< Cap 74 "Mostrar blog"
<<<< Cap 75 "Implementar buscador"
<<<< Cap 76 "Configuración de idioma local"
<<<< Cap 77 "Resumen de la sección - Crear Proyecto - BLOG-POSTS"

>>>> Seccion 9 "API-REST con Flask"
<<<< Cap 78 "Introducción a API-REST"
<<<< Cap 79 "Creando proyecto - Lista de contactos"
<<<< Cap 80 "Crear modelo"
<<<< Cap 81 "Crear rutas"
<<<< Cap 82 "Listar contactos"
<<<< Cap 83 "Crear contacto"
<<<< Cap 84 "Obtener contacto"
<<<< Cap 85 "Editar contacto"
<<<< Cap 86 "Eliminar contacto"
<<<< Cap 87 "Resumen de la sección - API-REST con Flask"

>>>> Seccion 10 "Proyecto Fina - Portafolio"
<<<< Cap 88 "Presentación del proyecto"
<<<< Cap 89 "Configuración del proyecto"
<<<< Cap 90 "Plantilla Base"
<<<< Cap 91 "Menú de navegación y Inicio"
.... Recursos
  img.zip
<<<< Cap 92 "Sección de Proyectos"
<<<< Cap 93 "Sección de Contacto"
<<<< Cap 94 "Sección de Footer"
<<<< Cap 95 "Plantilla envio de correo"
<<<< Cap 96 "Mailtrap y Flask-mail"
.... Recursos
  https://mailtrap.io/
  https://pythonhosted.org/Flask-Mail/
<<<< Cap 97 "Enviado correo"
<<<< Cap 98 "Resumen de la sección - Proyecto final"

>>>> Seccion 11 "Desplegar Aplicación"
<<<< Cap 99 "Entorno de producción"
<<<< Cap 100 "Herramientas nesesarias"
.... Recursos
  https://git-scm.com/
  https://github.com/
  https://www.pythonanywhere.com/
<<<< Cap 101 "Archivo de requerimiento"
<<<< Cap 102 "Crear repositorio"
<<<< Cap 103 "Proyecto de proeva con PythonAnywhere"
<<<< Cap 104 "Crear un entorno virtual y clonar"
<<<< Cap 105 "Desplegar aplicación"
<<<< Cap 106 "Resumen de la sección - Desplegar aplicación"

>>>> Seccion 12 "Cierre del curso"
<<<< Cap 107 "Despedida del curso"
.... Recursos
  https://github.com/alexroel/curso-flask-udemy
